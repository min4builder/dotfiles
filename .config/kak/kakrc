evaluate-commands %sh{
	find -L "$kak_runtime/autoload" -type f -name '*\.kak' \
		| sed 's/.*/try %{ source "&" } catch %{ echo -debug Autoload: could not load "&" }/'
}

add-highlighter global/ number-lines -hlcursor
add-highlighter global/ wrap -word -indent -marker 'â†’'
add-highlighter global/ column 80 +r
set-option global indentwidth 0
set-option global ui_options terminal_assistant=none

hook global BufCreate ^[^*]+$ %{
	editorconfig-load
	autoconfigtab
}
hook global WinSetOption filetype=(scheme|lisp|clojure|json) %{
	rainbow-enable-window
}

hook global RegisterModified '"' %{ nop %sh{ wl-copy "$kak_main_reg_dquote" >/dev/null 2>&1 & } }

map -docstring 'xdg-open file or url' global goto x '<esc>: xdg-open<ret>'
map global user P '!wl-paste -n<ret>'
map global user p '<a-!>wl-paste -n<ret>'
map global user R '|wl-paste -n<ret>'

define-command -params ..1 xdg-open %{
	execute-keys <a-i><a-w>
	nop %sh{ xdg-open "${1:-$kak_selection}" }
}

define-command selection-load %{
	echo -debug LOAD %val{buffile} %val{selection_desc}
	evaluate-commands %sh{
		name=$(realpath "$kak_buffile")
		[ "$name" ] || exit
		grep -F "$name" ~/.kak-selections | while read line; do
			if [ "${line%:*.*,*.*}" = "$name" ]; then
				echo "select ${line##*:}"
				break
			fi
		done
	}
}

define-command selection-store %{
	echo -debug STORE %val{buffile} %val{selection_desc}
	nop %sh{
		name=$(realpath "$kak_buffile")
		: >>~/.kak-selections
		grep -vF "$name:" ~/.kak-selections > ~/.kak-selections~
		echo "$name:$kak_selection_desc" >> ~/.kak-selections~
		mv ~/.kak-selections~ ~/.kak-selections
	}
}

map -docstring 'last saved selection' global goto s '<esc>: selection-load<ret>'
unalias global q quit
unalias global wq write-quit

define-command -docstring 'Quit' q %{
	selection-store
	quit
}

define-command -docstring 'Save and quit' wq %{
	selection-store
	write-all-quit
}

